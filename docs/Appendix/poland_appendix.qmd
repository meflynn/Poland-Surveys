---
title: "Supplementary Appendix for Outside Threats and Public Perceptions of the U.S. Military in Poland"
author:
  - name: Michael A. Allen
    affiliation: Boise State University
  - name: Michael E. Flynn
    affiliation: Kansas State University
  - name: Carla Martinez Machain
    affiliation: University at Buffalo (SUNY)
  - name: Grzegorz Smulek
    affiliation: Jagiellonian University
format:
#  pdf: default
  html:
    toc: true
bibliography: ../References/references.bib
csl: ../References/apsa.csl
link-citations: true
execute: 
  eval: true
  echo: false
  warning: false
  message: false
---

```{r setup}
#| warning: false
#| message: false
#| error: false
#| echo: false

library(bayesplot) # Need for postestimation plots
library(tidyverse)
library(targets) # Need to load model objects
library(tarchetypes)
library(flynnprojects) # Use for theme
library(furrr)
library(modelsummary)
library(kableExtra)
library(here)


# Custom fonts
# # Enable custom fonts
sysfonts::font_add_google("Oswald", family = "oswald")
showtext::showtext_auto()

# Bayesplot theme adjustment.
# Bring it into line with theme_flynn()
bayesplot::bayesplot_theme_update(text = element_text(family = "oswald", size = 8),
                                  strip.text.x = element_text(family = "oswald", size = 5),
                                  plot.title = element_text(face = "bold"))

# Figure parameters
knitr::opts_chunk$set(fig.align = "center", 
                      fig.retina = 3,
                      fig.width = 6, 
                      fig.height = (6 * 0.618),
                      out.width = "100%",
                      showtext = TRUE)

# set targets configuration
tar_config_set(store = here::here('_targets'),
               script = here::here('_targets.R'))

# Need to declare target source because I call the table function for the balance
# table below.
targets::tar_source()

# Load various model objects
tar_load(survey_clean)
tar_load(priors_clean)
tar_load(table_balance)
tar_load(model_0_bivariate)
tar_load(model_1_province)
tar_load(model_2_district)
tar_load(model_3_full_response)
tar_load(model_4_varying_effects)
tar_load(model_5_ordered_response)
tar_load(model_6_contact)
tar_load(model_7_contact_int)
tar_load(model_8_contact_int_districts)
```

# Overview

These appendices contain supplementary information for the paper Supplementary Appendix for Outside Threats and Public Perceptions of the U.S. Military in Poland. Herein we provide a number of additional resources related to the project. First, we provide basic information about the survey and data collection procedures. Second, we provide some basic descriptive statistics and information to help readers better understand the data and the distribution of key variables and responses. Third, to save space in the primary manuscript we include all of the model tables for the project here. Fourth, we also include a number of additional figures to help communicate the results of our analysis. Finally, we include a number of diagnostic plots generated from the models we run. In general, we focus on a few specific types of plots and, where necessary, on key variables. For example, traceplots for multilevel multinomial logit models can quickly become both numerous and unwieldy in the confines of a PDF or printed document.


# Power Analysis

Before analyzing the data we developed a Bayesian power analysis in an effort to evaluate the probability of correcting identifying true effects versus false positives. We follow @kruschkeDoingBayesianData2015 in carrying out this test and implement it in the following steps. 

First, we wrote a function that would simulate data that look like the expected sample data. In addition to our survey plan, we used data from @Allenetal2020 and @Allenetal2022 to establish a baseline expectation for what the distribution of the variables should look like. 

Second, we generate a set of expected coefficient/effect values for all of the variables in our model. Note that for each effect we allow the expected effect to vary, establishing a mean and standard deviation for the expected effect rather than fixing its value. Where our variables overlap with those included in @Allenetal2022, we use their posterior estimates to generate our expected effect sizes and distributions. Where our variables differ (for example, we include variables that capture respondents' income sources/occupational fields) we set the expected effects to 0 with a standard deviation of 0.5 to reflect our uncertainty in the parameter values. This does not apply to the treatment variables, which we address more fully below. We also include varying intercepts for the 16 Polish provinces to match our plan to model the actual data using varying intercepts.

Third, following this procedure we generate 200 hypothetical data sets for a given sample size value.  

Fourth, we chose a set of hypothetical sample size values to evaluate the model's ability to recover the expected parameter space. Specifically, we choose sample sizes of 1600, 2560, 4800, and 12800. Our actual data are close to 2,500, but we chose the other values to assess the model's performance across a wider range of hypothetical circumstances. 

In total, we end up with $I \times K$ datasets and models, where $I$ is the number of iterations per sample size (i.e. 200) and $K$ is the number of different sample sizes (i.e. 4. In our case, we generate 800 sample data sets and run the model a total of 800 times. As in our primary manuscript, we model the hypothetical data using a Bayesian multilevel multinomial logistic regression using `{brms}` [@Burkner2017; @Burkner2018]. 

For the treatment values, we do not have strong priors as to what constitute accurate effects. Accordingly, we generate parameters with a couple of considerations. First, given that we are estimating a multinomial logistic regression, the plausible parameter space is fairly constrained. Extreme values (e.g. $|\beta| > 4$) are unlikely (except in cases where observations appear to be rare). Second, we look at the effect sizes on similar variables in @Allenetal2020 and @Allenetal2022. Third, we generally expect that the different treatment prompts will increase support for a U.S. presence and decrease opposition. However, we also expect they will yield different magnitudes, with the combined treatment mentioning security concerns *and* economic benefits yielding the largest of the three. We also view this as an opportunity to evaluate our ability to recover effects of different sizes, and so we set the parameter distributions to values that we think fall within the plausible range, but also run the range of "small" to "large" effects. 

Given these considerations, the distributions we use in the power analysis are as follows.

$$ \begin{align}

\text{Support}
\begin{cases}
Treatment_{SecurtyandEconomic} &\sim N(1.0, 0.3) \\
Treatment_{Security} &\sim N(0.5, 0.1) \\
Treatment_{Economic} &\sim N(0.1, 0.02) \\
\end{cases} 
\\
\\
\text{Oppose}
\begin{cases}
Treatment_{SecurtyandEconomic} &\sim N(-0.8, 0.3) \\
Treatment_{Security} &\sim N(-0.5, 0.2) \\
Treatment_{Economic} &\sim N(-0.1, 0.05) \\
\end{cases}
\\
\\
\text{Don't know/Decline to answer}
\begin{cases}
Treatment_{SecurtyandEconomic} &\sim N(-0.5, 0.25) \\
Treatment_{Security} &\sim N(-0.2, 0.1) \\
Treatment_{Economic} &\sim N(-0.1, 0.08) \\
\end{cases}


\end{align}$$

The following figures show the results of our power analysis. The first figure shows the average $Pr(Direction)$ score for the treatment variables. The $Pr(Direction)$ statistic tells us the proportion of the posterior distribution that falls above/below 0 on the same side as the median value. If we had a median coefficient estimate where the median $\beta = 0.5$ and $Pr(Direction) = 0.97$, this tells us that there is a 97% chance of a positive effect. An average $Pr(Direction)$ of 0.90, for example, would therefore tell us that, on average, there is a 90% chance of a positive effect.  

It is common to see power analyses presented in terms of what proportion of models' 95% confidence intervals exclude 0 and demonstrate an effect. We adopt this alternative approach because it allows us to more directly incorporate information about the posterior distribution into our assessment than the conventional frequentist approach.

![](../Figures/fig-sim-threshold.jpg){#fig-threshold-plot}

The second figure shows spaghetti plots whereby the posterior distributions for the treatment effects from the 200 different models are overlaid on top of one another. While this figure does not provide us with a specific statistic as in the case of the previous figure, it does give us a visual check on the distribution of the recovered coefficients and the accompanying uncertainty. 

![](../Figures/fig-sim-spaghetti.jpg){#fig-spaghetti-plot}

In general, the models do a good job of recovering the parameter values we set in our simulation. The average $Pr(Direction)$ score is typically above 80%. This indicates that for the largest effect sizes we have a fairly strong chance of recovering the parameter of interest. However, for the smaller effect sizes we are looking at only a 50-60% chance of recovering the parameter of interest. Accordingly, we should be cautious in treating small effects as definitive given our relatively small sample size.

However, our expectations regarding the effects of the treatments prove to be quite wrong. As we show in the tables below, the treatment effects do not generally correlate strongly with the outcome response.



# Descriptive Figures

This section includes additional descriptive figures not included in the primary manuscript. 

## Views of Major Powers

@fig-views-us-troops shows the distribution of views of U.S. military personnel deployed to Poland in March of 2023 at the time of our survey. This is a different representation of the 2023 data we show in Figure 1 of the primary manuscript.

![Views of U.S. military personnel in Poland among Polish adults](../Figures/views-us-troops){#fig-views-us-troops}


@fig-views-russia shows the distribution of Polish adults' views of Poland's relations with Russia in March of 2023 at the time of our survey.Overwhelmingly respondents indicate that relations between Poland and Russia are "Somewhat hostile" or "Very hostile."

![Views of Russia among Polish adults](../Figures/views-russian-relations){#fig-views-russia}


## Distribution of respondents

@fig-respondents-province shows the number of respondents per province In general, most of the group sizes fall between 100 and 200 respondents per province. The lowest number of respondents per group is 52 (Opolskie) and the highest is 339 (Mazowieckie).

![The number of survey respondents per province.](../Figures/distribution-responses-province.png){#fig-respondents-province}

@fig-respondents-district shows the number of respondents per district—the lower level administrative unit below the province. Here we can see substantial skew in the number of respondents per unit. 47 districts produce only one respondent. 64 districts only produce 2 respondents. At the other end of the distribution we have a few districts that produce a vastly disproportionate share of our respondents. 51 respondents come from Łódź, 54 from Poznań, and 150 come from Warszawa. Though we run supplemental analyses using districts as a grouping unit, we do not rely on these estimates to discuss variation in attitudes as a function of geography. 

![The number of survey respondents per district.](../Figures/distribution-responses-district.png){#fig-respondents-district}



# Tables

This section contains a number of tables that provide descriptive insights into the data, and information on the models we run for our analysis.

## Balance Tables

@tbl-balance-table shows the balance of the predictor variables across the four treatment groups in the experiment. Most of the variables in our models are indicator variables, and so the numbers shown in the columns correspond to the number of respondents who chose a particular response for a particular question. For example, the number of people who respond that they identify as either Male or Female.

The value in the parentheses indicates the percentage of responses that fall into each of the four treatment categories. In general, we expect this value to fall close to 25% for each row.

Last, the final column shows the total number of responses for each category/row.

We do not conduct a formal balance test, but this table helps us to ensure that the randomization procedure worked as intended. In general, we see most response-treatment groups falling at around the 25% mark, which is what we should expect if individuals were randomly assigned to one of the four treatment categories. We see more substantial deviations where the total number of observations for a given response is low. For example, with only 40 total respondents indicating that their primary income source was in the agricultural sector, small differences in the number of people who fall into each treatment group have a larger effect on the percentage value.

The final row shows the mean value and standard deviation (in parentheses) for the ideology score, which is the only ordered integer response variable we included in the survey. Since we mean-center this measure, each category should have a mean of approximately 0 and a standard deviation of 0.5.

```{r balance-table-chunk}
#| tbl-cap: Balance table for predictors used in primary models.
#| label: tbl-balance-table
# Need to reference the source file/folder for the function I'm calling
#source("../R/tables.R")
tar_source()
tar_load(survey_clean)

out <- table_balance_f(survey_clean)

out
```

## Model Tables

This section contains the tables for the models we run in our analysis. All of the models were run using `brms` package version `r utils::packageVersion("brms")` [@Burkner2017; @Burkner2018; Stan2023].

1.  @tbl-bivariate shows the results of a multinomial logit model where we regress the outcome variable on the treatment group variable.
2.  @tbl-base-model shows the results of our primary multinomial multilevel logit model. This model regresses the outcome response onto the treatment variable and several other predictor variables. Varying intercepts by province.
3.  @tbl-district-model shows the results of our a multinomial multilevel logit model that regresses the outcome response onto the treatment variable and several other predictor variables. Varying intercepts by province and district.
4.  @tbl-full-response shows the results of a model where we use the full six category response variable rather than the four category response used in our primary models.
5.  @tbl-varying shows the results of a model that replicates our primary multilevel model, but allows the effects of the treatment variable to vary across province.
6.  @tbl-treat-group changes the basic model specification slightly and uses the treatment group as the grouping term for the varying intercepts. We also include a variable indicating whether the respondent reported having personal contact with a U.S. service member, and we allow this effect to vary across treatment groups.
7.  @tbl-contact-int builds upon our primary model in @tbl-base-model by adding a variable indicating whether the respondent reported having personal contact with a U.S. service member, and an interaction term between the contact variable and the treatment. We also include varying intercepts on province.
8.  @tbl-contact-int-district replicates the models from @tbl-contact-int but includes varying intercepts on both province and district.
9. @tbl-ordered shows the results of a multilevel ordered logit model. Here we take the original six category response variable, drop the "Don't know/Decline" Responses, and treat the remaining responses as ordered from "Strongly Oppose" to "Strongly Support".

```{r model-tables-setup}
#| include: false


# Set up custom tidy and glance functions
# add custom functions to extract estimates (tidy) and goodness-of-fit (glance) information
tidy.brmsfit <- function(x, ...) {
    s <- summary(x, ...)
    ret <- data.frame(
      term      = row.names(s$fixed),
      estimate  = s$fixed$Estimate,
      conf.low  = s$fixed$`l-95% CI`,
      conf.high = s$fixed$`u-95% CI`,
      group     = str_extract(row.names(s$fixed), "(?<=mu).*?(?=_)") # Extract grouping term (equation name)
    ) |> 
      mutate(term = str_remove(row.names(s$fixed), "(?<=mu).*?(?=_)")) # Change term to just variable name so it doesn't contain grouping term.
    
      ret
}

glance.brmsfit <- function(x, ...) {

    if (length(x[["ranef"]][["group"]]) > 0) {
      temp <- data.frame("N" = nrow(x[["data"]]),
                         "N Groups" = length(unique(x[["data"]][["province"]])),
                         "Groups" = do.call(paste, c(as.list(unique(x[["ranef"]][["group"]])), sep = ", ")) # Hopefully condenses cells so this part doesn't get spread out across several rows.
                         )
      

    } else {
      temp <- data.frame("N" = nrow(x[["data"]]),
                         "N Groups" = length(x[["ranef"]][["group"]])
                         )
      
    }
  
  temp
    
}


# Write a function to apply both custom tidy and glance functions to a brms model
custom.modelsummary.function <- function(x){
  
 templist <- list(
   
   "tidy" = tidy.brmsfit(x),
   "glance" = glance.brmsfit(x)
 
   )
 
 class(templist) <- "modelsummary_list"
 
 return(templist)
  
}


coef.names <- c("mu_treatment_groupEconomic" = "Economic",
                "mu_treatment_groupSecurity" = "Security",
                "mu_treatment_groupSecurityandEconomic" = "Security and Economic",
                "mu_contact_persYes" = "Personal Contact: Yes",
                "mu_contact_persDon’tknowDDeclinetoanswer" = "Personal Contact: Don't know/Decline",
                "mu_treatment_groupSecurity:contact_persYes" = "Security X Personal Contact",
                "mu_treatment_groupEconomic:contact_persYes" = "Economic X Personal Contact",
                "mu_treatment_groupSecurityandEconomic:contact_persYes" = "Security and Economic X Personal Contact",
                "mu_treatment_groupSecurity:contact_persDon’tknowDDeclinetoanswer" = "Security X Personal Contact: Don't know/Decline",
                "mu_treatment_groupEconomic:contact_persDon’tknowDDeclinetoanswer" = "Economic X Personal Contact: Don't know/Decline",
                "mu_treatment_groupSecurityandEconomic:contact_persDon’tknowDDeclinetoanswer" = "Security and Economic X Personal Contact: Don't know/Decline",
                "mu_age25to34years" = "25-34",
                "mu_age35to44years" = "35-44",
                "mu_age45to54years" = "45-54",
                "mu_age55to64years" = "55-64",
                "mu_ageAge65orolder" = "65+",
                "mu_income43340–57187" = "Second Quantile",
                "mu_income57188–74062" = "Third Quantile",
                "mu_income74063–93937" = "Fourth Quantile",
                "mu_income93938P" = "Fifth Quantile",
                "mu_incomeDeclinetoanswer" = "Income Decline",
                "mu_income_sourceFullMtimeorcontractworkinthegovernmentorpublicsector" = "Public sector contract work",
                "mu_income_sourceFullMtimeorcontractworkintheprivatesector" = "Private sector contract work",
                "mu_income_sourcePensionorretirement" = "Pension or Retirement",
                "mu_income_sourceSelfMemployednonMagricultural" = "Self-employed (non-agricultural)",
                "mu_income_sourceOthersources" = "Other sources",
                "mu_educationHigherEducationBachelorDEngineer" = "Bachelor's degree or Engineer",
                "mu_educationHigherEducationMaster’sdegreeorhigher" = "Master's degree or higher",
                "mu_educationPrimaryEducation" = "Primary Education",
                "mu_educationSecondaryEducation" = "Secondary Education",
                "mu_educationVocationalSchool" = "Vocational School",
                "mu_ideology_z" = "Ideology",
                "mu_minorityYes" = "Minority: Yes",
                "mu_minorityDeclinetoanswer" = "Minority: Decline",
                "mu_genderFemale" = "Female",
                "mu_genderNoneoftheabove" = "None of the Above",
                "mu_Intercept" = "Intercept")


# Index for variable groupings in output tables
# Create multiple groupings so I can use map() to apply them each to 
# tables of different lengths / model specifications.
coef.groups.1 <- tibble::tribble(~var, ~group,
                              "mu_treatment_groupEconomic", "Treatment",
                              "mu_treatment_groupSecurity", "Treatment",
                              "mu_treatment_groupSecurityandEconomic", "Treatment")

coef.groups.2 <- tibble::tribble(~var, ~group,
                              "mu_treatment_groupEconomic", "Treatment",
                              "mu_treatment_groupSecurity", "Treatment",
                              "mu_treatment_groupSecurityandEconomic", "Treatment",
                              "mu_age25to34years", "Age",
                              "mu_age35to44years", "Age",
                              "mu_age45to54years", "Age",
                              "mu_age55to64years", "Age",
                              "mu_ageAge65orolder", "Age",
                              "mu_income43340–57187", "Income",
                              "mu_income57188–74062", "Income",
                              "mu_income74063–93937", "Income",
                              "mu_income93938P", "Income",
                              "mu_incomeDeclinetoanswer", "Income",
                              "mu_income_sourceFullMtimeorcontractworkinthegovernmentorpublicsector ", "Income Source",
                              "mu_income_sourceFullMtimeorcontractworkintheprivatesector", "Income Source",
                              "mu_income_sourcePensionorretirement", "Income Source",
                              "mu_income_sourceSelfMemployednonMagricultural", "Income Source",
                              "mu_income_sourceOthersources", "Income Source",
                              "mu_educationHigherEducationBachelorDEngineer", "Education",
                              "mu_educationHigherEducationMaster’sdegreeorhigher", "Education",
                              "mu_educationPrimaryEducation", "Education",
                              "mu_educationSecondaryEducation", "Education",
                              "mu_educationVocationalSchool", "Education",
                              "mu_ideology_z", "Ideology",
                              "mu_minorityYes", "Minority",
                              "mu_minorityDeclinetoanswer", "Minority",
                              "mu_genderFemale", "Gender",
                              "mu_genderNoneoftheabove", "Gender",
                              "mu_Intercept", "Intercept")

coef.groups.3 <- tibble::tribble(~var, ~group,
                              "mu_contact_persYes", "Contact",
                              "mu_contact_persDon’tknowDDeclinetoanswer", "Contact",
                              "mu_age25to34years", "Age",
                              "mu_age35to44years", "Age",
                              "mu_age45to54years", "Age",
                              "mu_age55to64years", "Age",
                              "mu_ageAge65orolder", "Age",
                              "mu_income43340–57187", "Income",
                              "mu_income57188–74062", "Income",
                              "mu_income74063–93937", "Income",
                              "mu_income93938P", "Income",
                              "mu_incomeDeclinetoanswer", "Income",
                              "mu_income_sourceFullMtimeorcontractworkinthegovernmentorpublicsector ", "Income Source",
                              "mu_income_sourceFullMtimeorcontractworkintheprivatesector", "Income Source",
                              "mu_income_sourcePensionorretirement", "Income Source",
                              "mu_income_sourceSelfMemployednonMagricultural", "Income Source",
                              "mu_income_sourceOthersources", "Income Source",
                              "mu_educationHigherEducationBachelorDEngineer", "Education",
                              "mu_educationHigherEducationMaster’sdegreeorhigher", "Education",
                              "mu_educationPrimaryEducation", "Education",
                              "mu_educationSecondaryEducation", "Education",
                              "mu_educationVocationalSchool", "Education",
                              "mu_ideology_z", "Ideology",
                              "mu_minorityYes", "Minority",
                              "mu_minorityDeclinetoanswer", "Minority",
                              "mu_genderFemale", "Gender",
                              "mu_genderNoneoftheabove", "Gender",
                              "mu_Intercept", "Intercept")

coef.groups.4 <- tibble::tribble(~var, ~group,
                              "mu_treatment_groupEconomic", "Treatment",
                              "mu_treatment_groupSecurity", "Treatment",
                              "mu_treatment_groupSecurityandEconomic", "Treatment",
                              "mu_contact_persYes", "Contact",
                              "mu_contact_persDon’tknowDDeclinetoanswer", "Contact",
                              "mu_treatment_groupSecurity:contact_persYes", "Interactions",
                              "mu_treatment_groupEconomic:contact_persYes", "Interactions",
                              "mu_treatment_groupSecurityandEconomic:contact_persYes", "Interactions",
                              "mu_treatment_groupSecurity:contact_persDon’tknowDDeclinetoanswer", "Interactions",
                              "mu_treatment_groupEconomic:contact_persDon’tknowDDeclinetoanswer", "Interactions",
                              "mu_treatment_groupSecurityandEconomic:contact_persDon’tknowDDeclinetoanswer", "Interactions",
                              "mu_age25to34years", "Age",
                              "mu_age35to44years", "Age",
                              "mu_age45to54years", "Age",
                              "mu_age55to64years", "Age",
                              "mu_ageAge65orolder", "Age",
                              "mu_income43340–57187", "Income",
                              "mu_income57188–74062", "Income",
                              "mu_income74063–93937", "Income",
                              "mu_income93938P", "Income",
                              "mu_incomeDeclinetoanswer", "Income",
                              "mu_income_sourceFullMtimeorcontractworkinthegovernmentorpublicsector ", "Income Source",
                              "mu_income_sourceFullMtimeorcontractworkintheprivatesector", "Income Source",
                              "mu_income_sourcePensionorretirement", "Income Source",
                              "mu_income_sourceSelfMemployednonMagricultural", "Income Source",
                              "mu_income_sourceOthersources", "Income Source",
                              "mu_educationHigherEducationBachelorDEngineer", "Education",
                              "mu_educationHigherEducationMaster’sdegreeorhigher", "Education",
                              "mu_educationPrimaryEducation", "Education",
                              "mu_educationSecondaryEducation", "Education",
                              "mu_educationVocationalSchool", "Education",
                              "mu_ideology_z", "Ideology",
                              "mu_minorityYes", "Minority",
                              "mu_minorityDeclinetoanswer", "Minority",
                              "mu_genderFemale", "Gender",
                              "mu_genderNoneoftheabove", "Gender",
                              "mu_Intercept", "Intercept")

# Combine coefficient labels into a single list.
# One list entry for each table. 
# Note that some tables share the same coefficient list so 
# a given list may appear repeatedly.

group.list <- list(coef.groups.1,
                   coef.groups.2,
                   coef.groups.2,
                   coef.groups.2,
                   coef.groups.2,
                   coef.groups.3,
                   coef.groups.4,
                   coef.groups.4
                   )


```

```{r table-output}
#| include: false


# Create list of model groups
modlist <- list(
  "Bivariate" = model_0_bivariate,
  "Base Model" = model_1_province,
  "District Model" = model_2_district,
  "Full Response Variable" = model_3_full_response,
  "Group Effects" = model_4_varying_effects,
  #"Ordered Response" = model_5_ordered_response,
  "Personal Contact with Treatment Groupings" = model_6_contact,
  "Contact and Treatment Interaction" = model_7_contact_int,
  "Contact and Treatment Interaction (Districts)" = model_8_contact_int_districts
)

# Name each nested model according to outcome variable distance.
named.mod.list <- future_map(
  .x = modlist,
  .f = ~ set_names(.x, c("Distance: 100k", "Distance: 5k"))
)

# Create nested map function to apply custom tidy and glance function 
# to all brms models and convert lists to modelsummary_list.
named.mod.list.custom <- future_map(
  .x = seq_along(named.mod.list),
  .f = ~ map(
    .x = named.mod.list[[.x]],
    .f = \(x) custom.modelsummary.function(x)
  )
)

# Create modelsummary tables of all models in custom list.
# Export this as a kableExtra object so I can apply grouping labels
tables.out <- future_map2(
  .x = seq_along(named.mod.list.custom),
  .y = seq_along(named.mod.list),
  .f = ~modelsummary::modelsummary(named.mod.list.custom[[.x]],
                                   estimate = "estimate",
                                   statistic = "[{conf.low}, {conf.high}]",
                                   conf_level = 0.89,
                                   shape = term ~ model + group,
                                   coef_map = coef.names,
                                   title = glue::glue("{names(named.mod.list[.y])}"),
                                   fmt = fmt_decimal(digits = 3),
                                   output = "kableExtra") |> 
    kableExtra::kable_styling(bootstrap_options = "striped",
                              font_size = 8) 
) 


# use map2() to apply the group labels/lists (.y) to the list of tables (.x)
tables.out.grouped <- future_map2(
  .x = seq_along(tables.out),
  .y = seq_along(group.list),
  .f = ~ tables.out[[.x]] |> kableExtra::group_rows(index = setNames(rle(group.list[[.y]]$group)[[1]]*2, rle(group.list[[.y]]$group)[[2]]),
                                                    background = "deepskyblue")
)

```

```{r bivariate-model-table}
#| tbl-cap: Multinomial logistic regressions with treatment effects and outcome response. Models only include the treatment received by the respondent and their response.
#| label: tbl-bivariate
tables.out.grouped[[1]]

```

```{r base-model-table}
#| tbl-cap: Multilevel multinomial logistic regressions with respondents grouped by province. These model the response as a function of the treatment variables and several predictor variables, with varying intercepts by province.
#| label: tbl-base-model

tables.out.grouped[[2]]

```

```{r district-model-table}
#| tbl-cap: Multilevel multinomial logistic regressions with respondents grouped by province and district. These model the response as a function of the treatment variables and several predictor variables, with varying intercepts by province and by district.
#| label: tbl-district-model
#| 
tables.out.grouped[[3]]

```

```{r full-response-model-table}
#| tbl-cap: Multilevel multinomial logistic regressions with respondents grouped by province. These model the response as a function of the treatment variables and several predictor variables, with varying intercepts by province. Here we use the original six response categories rather than the four aggregated categories from the main model.
#| label: tbl-full-response

tables.out.grouped[[4]]

```

```{r varying-effects-model-table}
#| tbl-cap: Multilevel multinomial logistic regressions with respondents grouped by province. These model the response as a function of the treatment variables and several predictor variables, with varying intercepts by province. We also allow the effect of the treatment variables to vary by province.
#| label: tbl-varying
tables.out.grouped[[5]]

```

```{r treatment-group-contact-table}
#| tbl-cap: Multilevel multinomial logistic regressions with respondents grouped by treatment groups These model the response as a function of several predictor variables, with varying intercepts by province. We also allow the effect of contact to vary by treatment group.
#| label: tbl-treat-group
tables.out.grouped[[6]]

```

```{r contact-int-model-table}
#| tbl-cap: Multilevel multinomial logistic regressions with respondents grouped by province. These model the response as a function of the treatment variables and several predictor variables, with varying intercepts by province. Here we interact the contact variable with the treatment variable to see if the effect of the treatment is conditioned by reported personal contact.
#| label: tbl-contact-int
#| 
tables.out.grouped[[7]]

```

```{r contact-int-district-model-table}
#| tbl-cap: Multilevel multinomial logistic regressions with respondents grouped by province and district. These model the response as a function of the treatment variables and several predictor variables, with varying intercepts by province and by district. Here we interact the contact variable with the treatment variable to see if the effect of the treatment is conditioned by reported personal contact.
#| label: tbl-contact-int-district

tables.out.grouped[[7]]

```



```{r ordered-table-setup}
#| include: false


# Custom glance function for already-supported brmsfit model
# This just pulls out the relevant information I want in the table footer.
glance_custom.brmsfit <- function(x, ...) {

      temp <- data.frame("N" = nrow(x[["data"]]),
                         "N Groups" = length(unique(x[["data"]][["province"]])),
                         "Groups" = do.call(paste, c(as.list(unique(x[["ranef"]][["group"]])), sep = ", ")),  # Hopefully condenses cells so this part doesn't get spread out across several rows.
                           "sd(Province)" = round(summary(x)[["random"]][[1]][[1]], 3)
                         )

  temp
    
}



coef.names.ord <- c("b_treatment_groupEconomic" = "Economic",
                "b_treatment_groupSecurity" = "Security",
                "b_treatment_groupSecurityandEconomic" = "Security and Economic",
                "b_contact_persYes" = "Personal Contact: Yes",
                "b_contact_persDon’tknowDDeclinetoanswer" = "Personal Contact: Don't know/Decline",
                "b_age25to34years" = "25-34",
                "b_age35to44years" = "35-44",
                "b_age45to54years" = "45-54",
                "b_age55to64years" = "55-64",
                "b_ageAge65orolder" = "65+",
                "b_income43340–57187" = "Second Quantile",
                "b_income57188–74062" = "Third Quantile",
                "b_income74063–93937" = "Fourth Quantile",
                "b_income93938P" = "Fifth Quantile",
                "b_incomeDeclinetoanswer" = "Income Decline",
                "b_income_sourceFullMtimeorcontractworkinthegovernmentorpublicsector" = "Public sector contract work",
                "b_income_sourceFullMtimeorcontractworkintheprivatesector" = "Private sector contract work",
                "b_income_sourcePensionorretirement" = "Pension or Retirement",
                "b_income_sourceSelfMemployednonMagricultural" = "Self-employed (non-agricultural)",
                "b_income_sourceOthersources" = "Other sources",
                "b_educationHigherEducationBachelorDEngineer" = "Bachelor's degree or Engineer",
                "b_educationHigherEducationMaster’sdegreeorhigher" = "Master's degree or higher",
                "b_educationPrimaryEducation" = "Primary Education",
                "b_educationSecondaryEducation" = "Secondary Education",
                "b_educationVocationalSchool" = "Vocational School",
                "b_ideology_z" = "Ideology",
                "b_minorityYes" = "Minority: Yes",
                "b_minorityDeclinetoanswer" = "Minority: Decline",
                "b_genderFemale" = "Female",
                "b_genderNoneoftheabove" = "None of the Above",
                "Intercept[1]" = "Intercept 1",
                "Intercept[2]" = "Intercept 2",
                "Intercept[3]" = "Intercept 3",
                "Intercept[4]" = "Intercept 4")

coef.groups.2 <- tibble::tribble(~var, ~group,
                              "b_treatment_groupEconomic", "Treatment",
                              "b_treatment_groupSecurity", "Treatment",
                              "b_treatment_groupSecurityandEconomic", "Treatment",
                              "b_age25to34years", "Age",
                              "b_age35to44years", "Age",
                              "b_age45to54years", "Age",
                              "b_age55to64years", "Age",
                              "b_ageAge65orolder", "Age",
                              "b_income43340–57187", "Income",
                              "b_income57188–74062", "Income",
                              "b_income74063–93937", "Income",
                              "b_income93938P", "Income",
                              "b_incomeDeclinetoanswer", "Income",
                              "b_income_sourceFullMtimeorcontractworkinthegovernmentorpublicsector ", "Income Source",
                              "b_income_sourceFullMtimeorcontractworkintheprivatesector", "Income Source",
                              "b_income_sourcePensionorretirement", "Income Source",
                              "b_income_sourceSelfMemployednonMagricultural", "Income Source",
                              "b_income_sourceOthersources", "Income Source",
                              "b_educationHigherEducationBachelorDEngineer", "Education",
                              "b_educationHigherEducationMaster’sdegreeorhigher", "Education",
                              "b_educationPrimaryEducation", "Education",
                              "b_educationSecondaryEducation", "Education",
                              "b_educationVocationalSchool", "Education",
                              "b_ideology_z", "Ideology",
                              "b_minorityYes", "Minority",
                              "b_minorityDeclinetoanswer", "Minority",
                              "b_genderFemale", "Gender",
                              "b_genderNoneoftheabove", "Gender",
                              "Intercept[1]", "Intercept",
                              "Intercept[2]", "Intercept",
                              "Intercept[3]", "Intercept",
                              "Intercept[4]", "Intercept")


```


```{r ordered-table-output}
#| echo: false

# Add names to the ordered response model list
names(model_5_ordered_response) <- c("100 km", "5 km")


# Create modelsummary tables of all models in custom list.
# Export this as a kableExtra object so I can apply grouping labels
tables.out.ordered <- modelsummary::modelsummary(model_5_ordered_response,
                                   estimate = "estimate",
                                   statistic = "[{conf.low}, {conf.high}]",
                                   conf_level = 0.89,
                                   shape = term ~ model,
                                   coef_map = coef.names.ord,
                                   title = "Ordered multilevel logit models",
                                   fmt = fmt_decimal(digits = 3),
                                   output = "kableExtra") |>
    kableExtra::kable_styling(bootstrap_options = "striped",
                              font_size = 8) |> 
  kableExtra::group_rows(index = setNames(rle(coef.groups.2$group)[[1]]*2, 
                                          rle(coef.groups.2$group)[[2]]),
                         background = "deepskyblue")
  



```


```{r ordered-models-table}
#| tbl-cap: Multilevel ordered logistic regressions with respondents grouped by province These model the response as a function of the treatment variables and several predictor variables, with varying intercepts by province.
#| label: tbl-ordered

tables.out.ordered

```




# Results Figures

This section displays several figures derived from the models above. These figures are intended to help communicate the results of our analysis in a more substantively meaningful and accessible way. In general, given our use of multilevel multinomial logit models, we display results on a probability scale rather than discussing results in terms of odds ratios. All of the figures shown here were generated using the `{tidybayes}` package [@KayTidyBayes].

## Effect of Distance on Expressed Attitudes

Here we present a series of figures that contrast the posterior distribution samples from the two models predicting responses to the question regarding support for the construction of a new U.S. military facility in Poland. As we discuss in the manuscript, each survey participant is presented with one of four short vignettes and then asked about their level of support for the construction of a new U.S. military facility---first at a proposed distance of 100km and then a distance of 5km.

For each model we draw 500 sample values from the posterior distribution to generate a set of predicted probability values for the four possible outcomes responses/choices (i.e. Neutral, Oppose, Support, and Don't know/Decline). To generate these values we set all of the predictor variables to their modal or mean values. We allow the treatment variables and grouping categories to take on the values observed in the data---for example, the first set of models includes four treatment categories and varying intercepts on the province grouping term, and so we end up with 64 (4 treatment groups $\times$ 16 provinces) groups of predicted probabilities corresponding to the 16 provinces in the data. For each individual distance-treatment grouping, we allow the province to vary when generating our predicted probabilities, meaning our posterior samples are actually vectors with 8,000 rows (500 samples $\times$ 16 provinces).  When we calculate the contrasts we calculate the within-group (e.g. province) differences in the predicted probability values.

@eq_distance-equation shows how we calcualte the distance effect. $\mathbb{E}[Y_{t,r,p,i,5km}]$ is the expected value of $Y$ for treatment group $t$, for response $r$, in province $p$, for draw/row $i$ for the 5 km model. Similarly, $\mathbb{E}[Y_{t,r,p,i,100km}]$ is the expected value of $Y$ for treatment group $t$, for response$r$, in province $p$, for draw/row $i$ for the 100 km model. 

$$\text{Distance Effect} = (\mathbb{E}[Y_{t,r,p,i,5km}] - \mathbb{E}[Y_{t,r,p,i,100km}])$$ {#eq-distance-equation}


Once we have these predicted values for each of the two models, we then compare the posterior samples by subtracting the 100k posterior values from the 5k posterior values. Accordingly, positive values indicate that support is higher when the proposed distance is smaller, while smaller values indicate that support is stronger where the proposed distance is greater. For example, if the median posterior value for the "Support" outcome response is 0.80 for the 5km model and 0.60 for the 100k model, the resulting contrast value would be 0.20, which would tell us that the median predicted level for the support response is 20 percentage points higher for the 5k model. 

We present a series of figures depicting these contrasts below. The dotplots depict the distribution of the posterior contrasts, with blue indicating observed values fall above 0 and red indicating that the observed values fall below 0. We also plot point intervals showing the median posterior contrast value, surrounded by 50% and 89% credible intervals. The dashed line represents 0. Finally, in each panel we also show the $Pr(Direction)$ statistic---the probability that the median value falls above/below 0. This takes on a value in the range of $[0.5, 1.0]$.



### Province-Level Models

In this section we present a series of figures plotting the posterior contrasts for each of the treatment group categories. Higher/more positive values indicate a higher probability of the given response in the 5km model and lower/more negative probability values indicate a higher probability of a given response in the 100km model.^[Note that we omit the Don't know/Decline category because there are generally very few observations for this response group. For both the 100km and 5km questions we see only about 3% of respondents answer "Don't know/Decline to answer".] 

In general we observe similar patterns across all four panels, so rather than repeat ourselves we provide a general summary of the findings. Across all four panels we see that there is a slightly higher probability of a respondent responding with "Neutral" when the proposed distance is closer as compared to farther away. The posterior sample median generally ranges from approximately 0.02 to 0.09. Similarly, the $Pr(Direction)$ statistic ranges from approximately 0.72 to 0.94, indicating fairly strong probabilities of observing a positive effect here.

Though neutrality is also important, the remaining panels for Support and Opposition to the proposed U.S. military facility are perhaps more intuitively impactful. We see that across all four treatment groupings, respondents are less likely to support a new U.S. military facility when the proposed distance is closer (i.e. 5km) than further away (i.e. 100km). The probability of the observed difference is high, with all four groupings seeing 98--99% of the posterior contrasts falling below 0. Furthermore, the magnitude of the median contrast is fairly large, with differences in the predicted probability values falling between approximately 0.12 and 0.15 across the treatment groups.

Similarly, we observe fairly strong evidence that respondents are more likely to **oppose** a new U.S. military facility when the proposed distance is closer. We find $Pr(Direction)$ statistics of approximately 0.98 or greater across all four groups, with median contrasts between approximately 0.10 and 0.12 in all groups. 

These results are broadly consistent with a "NIMBYism" theme---people in Poland generally like U.S. military personnel and appear supportive of the security ties between the U.S. and Poland, but are less likely to support a new U.S. military facility if that facility is going to be located close by. 



![Contrasts between distance for control group. 50% and 89% credible intervals shown around point estimate. Dots represent distribution quantiles from posterior sample draws. Dot coloring indicates portion of posterior samples that fall above or below 0. Pr(Direction) value indicates the probability or proportion of the posterior samples that fall above or below 0 on the same side as the median of the posterior.](../Figures/contrasts-control:5km-control:100km.png){#fig-distance-control}

![Contrasts between distance for security treatment group. 50% and 89% credible intervals shown around point estimate. Dots represent distribution quantiles from posterior sample draws. Dot coloring indicates portion of posterior samples that fall above or below 0. Pr(Direction) value indicates the probability or proportion of the posterior samples that fall above or below 0 on the same side as the median of the posterior.](../Figures/contrasts-security:5km-security:100km.png){#fig-distance-sec}

![Contrasts between distance for economic treatment group. 50% and 89% credible intervals shown around point estimate. Dots represent distribution quantiles from posterior sample draws. Dot coloring indicates portion of posterior samples that fall above or below 0. Pr(Direction) value indicates the probability or proportion of the posterior samples that fall above or below 0 on the same side as the median of the posterior.](../Figures/contrasts-economic:5km-economic:100km.png){#fig-distance-econ}

![Contrasts between distance for combined security and economic treatment group. 50% and 89% credible intervals shown around point estimate. Dots represent distribution quantiles from posterior sample draws. Dot coloring indicates portion of posterior samples that fall above or below 0. Pr(Direction) value indicates the probability or proportion of the posterior samples that fall above or below 0 on the same side as the median of the posterior.](../Figures/contrasts-securityandeconomic:5km-securityandeconomic:100km.png){#fig-distance-sececon} 




## District-Level Models

The following figures show the contrasts in predicted probabilities for the 5k and 100k distance questions, within treatment groups. The results presented in this section are from models that treat respondents as nested within districts, which are themselves nested within provinces.  Accordingly, the models generating these figures include varying intercept terms for both province and district.

As in the previous section, we again find results largely consistent with a "NIMBY" framework. Respondents are generally less supportive of a U.S. military facility when the proposed distance for the facility's location is 5km away as compared to 100km away. This pattern holds across all four treatment groups, with $Pr(Direction)$ values around 0.98 or higher and median posterior contrasts in the 0.10 to 0.15 range in the "Support" and "Oppose" response groupings.    

![Contrasts between distance for control group. 50% and 89% credible intervals shown around point estimate. Dots represent distribution quantiles from posterior sample draws. Dot coloring indicates portion of posterior samples that fall above or below 0. Pr(Direction) value indicates the probability or proportion of the posterior samples that fall above or below 0 on the same side as the median of the posterior.](../Figures/contrasts-district-control:5km-control:100km.png){#fig-distance-district-control}

![Contrasts between distance for security treatment group. 50% and 89% credible intervals shown around point estimate. Dots represent distribution quantiles from posterior sample draws. Dot coloring indicates portion of posterior samples that fall above or below 0. Pr(Direction) value indicates the probability or proportion of the posterior samples that fall above or below 0 on the same side as the median of the posterior.](../Figures/contrasts-district-security:5km-security:100km.png){#fig-distance-district-sec}

![Contrasts between distance for economic treatment group. 50% and 89% credible intervals shown around point estimate. Dots represent distribution quantiles from posterior sample draws. Dot coloring indicates portion of posterior samples that fall above or below 0. Pr(Direction) value indicates the probability or proportion of the posterior samples that fall above or below 0 on the same side as the median of the posterior.](../Figures/contrasts-district-economic:5km-economic:100km.png){#fig-distance-district-econ}

![Contrasts between distance for combined security and economic treatment group. 50% and 89% credible intervals shown around point estimate. Dots represent distribution quantiles from posterior sample draws. Dot coloring indicates portion of posterior samples that fall above or below 0. Pr(Direction) value indicates the probability or proportion of the posterior samples that fall above or below 0 on the same side as the median of the posterior.](../Figures/contrasts-district-securityandeconomic:5km-securityandeconomic:100km.png){#fig-distance-district-sececon}




## Moderating Effect of Contact

In this section we present a series of figures that build on those in the previous section. Above we explore the contrasts in posterior distributions between the 100km and 5km models. Here we follow a similar procedure, presenting the contrasts in distance effects between those who report. having contact with U.S. military personnel and those who do not report and interpersonal contact with U.S. military personnel. @eq-contact-equation shows how we calculate these contrasts. In general, this is similar to what we do above to generate the contrasts for distance, but here we are actually generating contrasts between two contrasts. This is essentially a differences-in-differences.

As we describe above, we first take 500 draws/samples from the posterior distribution for each comparison grouping. For example, we obtain 500 draws for one "group" when we take draws from the 100 km distance model and set contact to "Yes", response = "Support", treatment group to "Control", and province to "Śląskie". We would generate another sample by changing contact to "No" and keeping the rest of the settings the same. Because we take posterior draws for every province, we actually end up with 8,000 posterior draws (500 draws $\times$ 16 provinces). 

Second, after generating the posterior samples for each grouping we then calculate the contrast values. Each grouping thus leaves us with a vector of posterior draws with 8,000 rows. We then subtract these rows from one another to obtain our contrasts.

$\mathbb{E}[Y_{t,r,p,i,5km}]$ is the expected value of $Y$ for treatment group $t$, for response $r$, in province $p$, for draw/row $i$ for the 5 km model. Similarly, $\mathbb{E}[Y_{t,r,p,i,100km}]$ is the expected value of $Y$ for treatment group $t$, for response$r$, in province $p$, for draw/row $i$ for the 100 km model. The superscript takes on a value of $0$ for no reported contact and $1$ for reported contact. The result is a comparison of how large an effect distance has on the expected outcome between the two contact categories.

$$\text{Contact Effect} = (\mathbb{E}[Y^0_{t,r,p,i,5km}] - \mathbb{E}[Y^0_{t,r,p,i,100km}]) - (\mathbb{E}[Y^1_{t,r,p,i,5km}] - \mathbb{E}[Y^1_{t,r,p,i,100km}])$$ {#eq-contact-equation}

In general, we find some evidence that those who report personal contact with U.S. military personnel see a kind of "offset" effect, where contact appears to negate the effect of distance to some extent. 


### Province-Level Contact Models

![Contrasts between contact groups and distance for control group. 50% and 89% credible intervals shown around point estimate. Dots represent distribution quantiles from posterior sample draws. Dot coloring indicates portion of posterior samples that fall above or below 0. Pr(Direction) value indicates the probability or proportion of the posterior samples that fall above or below 0 on the same side as the median of the posterior.](../Figures/contact-contrasts-control:contactyesat5km-control:contactnoat100km.png){#fig-con-control}

![Contrasts between contact groups and distance for security treatment group. 50% and 89% credible intervals shown around point estimate. Dots represent distribution quantiles from posterior sample draws. Dot coloring indicates portion of posterior samples that fall above or below 0. Pr(Direction) value indicates the probability or proportion of the posterior samples that fall above or below 0 on the same side as the median of the posterior.](../Figures/contact-contrasts-security:contactyesat5km-security:contactnoat100km.png){#fig-con-sec}

![Contrasts between contact groups and distance for economic treatment group. 50% and 89% credible intervals shown around point estimate. Dots represent distribution quantiles from posterior sample draws. Dot coloring indicates portion of posterior samples that fall above or below 0. Pr(Direction) value indicates the probability or proportion of the posterior samples that fall above or below 0 on the same side as the median of the posterior.](../Figures/contact-contrasts-economic:contactyesat5km-economic:contactnoat100km.png){#fig-con-econ}

![Contrasts between contact groups and distance for combined security and economic treatment group. 50% and 89% credible intervals shown around point estimate. Dots represent distribution quantiles from posterior sample draws. Dot coloring indicates portion of posterior samples that fall above or below 0. Pr(Direction) value indicates the probability or proportion of the posterior samples that fall above or below 0 on the same side as the median of the posterior.](../Figures/contact-contrasts-securityandeconomic:contactyesat5km-securityandeconomic:contactnoat100km.png){#fig-con-sececon}




### District-Level Contact Models

![Contrasts between contact groups and distance for control group. 50% and 89% credible intervals shown around point estimate. Dots represent distribution quantiles from posterior sample draws. Dot coloring indicates portion of posterior samples that fall above or below 0. Pr(Direction) value indicates the probability or proportion of the posterior samples that fall above or below 0 on the same side as the median of the posterior.](../Figures/contact-district-contrasts-control:contactyesat5km-control:contactnoat100km.png){#fig-con-district-control}

![Contrasts between contact groups and distance for security treatment group. 50% and 89% credible intervals shown around point estimate. Dots represent distribution quantiles from posterior sample draws. Dot coloring indicates portion of posterior samples that fall above or below 0. Pr(Direction) value indicates the probability or proportion of the posterior samples that fall above or below 0 on the same side as the median of the posterior.](../Figures/contact-district-contrasts-security:contactyesat5km-security:contactnoat100km.png){#fig-con-district-sec}

![Contrasts between contact groups and distance for economic treatment group. 50% and 89% credible intervals shown around point estimate. Dots represent distribution quantiles from posterior sample draws. Dot coloring indicates portion of posterior samples that fall above or below 0. Pr(Direction) value indicates the probability or proportion of the posterior samples that fall above or below 0 on the same side as the median of the posterior.](../Figures/contact-district-contrasts-economic:contactyesat5km-economic:contactnoat100km.png){#fig-con-district-econ}

![Contrasts between contact groups and distance for combined security and economic treatment group. 50% and 89% credible intervals shown around point estimate. Dots represent distribution quantiles from posterior sample draws. Dot coloring indicates portion of posterior samples that fall above or below 0. Pr(Direction) value indicates the probability or proportion of the posterior samples that fall above or below 0 on the same side as the median of the posterior.](../Figures/contact-district-contrasts-securityandeconomic:contactyesat5km-securityandeconomic:contactnoat100km.png){#fig-con-district-sececon}




# Model Prior Information

The table below shows a table containing the priors used in our primary models. These prior values are based on the results of @Allen2020 and @Allenetal2022.

```{r prior-table}

kableExtra::kbl(priors_clean,
                caption = "Priors used in choice models") |> 
  kableExtra::kable_styling(latex_options = c("scale_down", "striped", "repeat_header"),
                            full_width = TRUE,
                            font_size = 5,
                            position = "center") |> 
  kableExtra::scroll_box(height = "500px")

```

# Model Diagnostics

The following section contains model diagnostic plots for all of the models included in our analysis, as well as supplementary analyses.


## Posterior Predictive Checks

```{r bivar-ppcheck-100k}
#| message: false
#| warning: false
#| echo: false
#| fig-cap: "Posterior predictive check for bivariate models, outcome question: 100k distance."

brms::pp_check(model_0_bivariate[[1]],
               ndraws = 100,
               type = "bars") +
  labs(title = "Bivariate Models, 100k")
```

```{r bivar-ppcheck-5k}
#| message: false
#| warning: false
#| echo: false
#| fig-cap: "Posterior predictive check for bivariate models, outcome question: 5k distance."

brms::pp_check(model_0_bivariate[[2]],
               ndraws = 100,
               type = "bars") +
  labs(title = "Bivariate Models, 5k")
```

```{r province-ppcheck-100k}
#| message: false
#| warning: false
#| echo: false
#| fig-cap: "Posterior predictive check for province models, outcome question: 100k distance."

brms::pp_check(model_1_province[[1]],
               ndraws = 100,
               type = "bars") +
  labs(title = "Province Models, 100k")
```

```{r province-ppcheck-5k}
#| message: false
#| warning: false
#| echo: false
#| fig-cap: "Posterior predictive check for province models, outcome question: 5k distance."

brms::pp_check(model_1_province[[2]],
               ndraws = 100,
               type = "bars") +
  labs(title = "Province Models, 5k")
```

```{r district-ppcheck-100k}
#| message: false
#| warning: false
#| echo: false
#| fig-cap: "Posterior predictive check for district models, outcome question: 100k distance."

brms::pp_check(model_2_district[[1]],
               ndraws = 100,
               type = "bars") +
  labs(title = "District Models, 100k")
```

```{r district-ppcheck-5k}
#| message: false
#| warning: false
#| echo: false
#| fig-cap: "Posterior predictive check for district models, outcome question: 5k distance."

brms::pp_check(model_2_district[[2]],
               ndraws = 100,
               type = "bars") +
  labs(title = "District Models, 5k")
```

```{r full-ppcheck-100k}
#| message: false
#| warning: false
#| echo: false
#| fig-cap: "Posterior predictive check for full response models, outcome question: 100k distance."

brms::pp_check(model_3_full_response[[1]],
               ndraws = 100,
               type = "bars") +
  labs(title = "Full Response Models, 100k")
```

```{r full-ppcheck-5k}
#| message: false
#| warning: false
#| echo: false
#| fig-cap: "Posterior predictive check for full response models, outcome question: 5k distance."

brms::pp_check(model_3_full_response[[2]],
               ndraws = 100,
               type = "bars") +
  labs(title = "Full Response Models, 5k")
```

```{r ve-ppcheck-100k}
#| message: false
#| warning: false
#| echo: false
#| fig-cap: "Posterior predictive check for varying effects models, outcome question: 100k distance."

brms::pp_check(model_4_varying_effects[[1]],
               ndraws = 100,
               type = "bars") +
  labs(title = "Varying effects Models, 100k")
```

```{r ve-ppcheck-5k}
#| message: false
#| warning: false
#| echo: false
#| fig-cap: "Posterior predictive check for varying effects models, outcome question: 5k distance."

brms::pp_check(model_4_varying_effects[[2]],
               ndraws = 100,
               type = "bars") +
  labs(title = "Varying Effects Models, 5k")
```

```{r ordered-ppcheck-100k}
#| message: false
#| warning: false
#| echo: false
#| fig-cap: "Posterior predictive check for ordered models, outcome question: 100k distance."

brms::pp_check(model_5_ordered_response[[1]],
               ndraws = 100,
               type = "bars") +
  labs(title = "Ordered Models, 100k")
```

```{r ordered-ppcheck-5k}
#| message: false
#| warning: false
#| echo: false
#| fig-cap: "Posterior predictive check for ordered models, outcome question: 5k distance."

brms::pp_check(model_5_ordered_response[[2]],
               ndraws = 100,
               type = "bars") +
  labs(title = "Ordered Models, 5k")
```

```{r contact-ppcheck-100k}
#| message: false
#| warning: false
#| echo: false
#| fig-cap: "Posterior predictive check for contact models, outcome question: 100k distance."

brms::pp_check(model_6_contact[[1]],
               ndraws = 100,
               type = "bars") +
  labs(title = "Contact Models, 100k")
```

```{r contact-ppcheck-5k}
#| message: false
#| warning: false
#| echo: false
#| fig-cap: "Posterior predictive check for contact models, outcome question: 5k distance."

brms::pp_check(model_6_contact[[2]],
               ndraws = 100,
               type = "bars") +
  labs(title = "Contact Models, 5k")
```

```{r contact-interaction-ppcheck-100k}
#| message: false
#| warning: false
#| echo: false
#| fig-cap: "Posterior predictive check for contact and treatment interaction models, outcome question: 100k distance."

brms::pp_check(model_7_contact_int[[1]],
               ndraws = 100,
               type = "bars") +
  labs(title = "Contact and Treatment Interaction Models, 100k")
```

```{r contact-interaction-ppcheck-5k}
#| message: false
#| warning: false
#| echo: false
#| fig-cap: "Posterior predictive check for contact and treatment interaction models, outcome question: 5k distance."

brms::pp_check(model_7_contact_int[[2]],
               ndraws = 100,
               type = "bars") +
  labs(title = "Contact and Treatment Interaction Models, 5k")
```

```{r contact-interaction-districts-ppcheck-100k}
#| message: false
#| warning: false
#| echo: false
#| fig-cap: "Posterior predictive check for contact models, outcome question: 100k distance."

brms::pp_check(model_8_contact_int_districts[[1]],
               ndraws = 100,
               type = "bars") +
  labs(title = "Contact and Treatment Interaction District Models, 100k")
```

```{r contact-interaction-districts-ppcheck-5k}
#| message: false
#| warning: false
#| echo: false
#| fig-cap: "Posterior predictive check for contact models, outcome question: 5k distance."

brms::pp_check(model_8_contact_int_districts[[2]],
               ndraws = 100,
               type = "bars") +
  labs(title = "Contact and Treatment Interaction District Models, 5k")
```






## Traceplots

```{r bivar-traceplots-100k}
#| message: false
#| warning: false
#| echo: false
#| fig-cap: "Traceplots for treatment variables from bivariate models, outcome question: 100k distance."

bayesplot::mcmc_trace(model_0_bivariate[[1]],
                      regex_pars = c(".*treatment.*")) +
  labs(title = "Bivariate Models, 100k")
```

```{r bivar-traceplots-5k}
#| message: false
#| warning: false
#| echo: false
#| fig-cap: "Traceplots for treatment variables from bivariate models, outcome question: 5k distance."

bayesplot::mcmc_trace(model_0_bivariate[[2]],
                      regex_pars = c(".*treatment.*")) +
  labs(title = "Bivariate Models, 5k")
```

```{r province-traceplots-100k}
#| message: false
#| warning: false
#| echo: false
#| fig-cap: "Traceplots for treatment variables from province models, outcome question: 100k distance."

bayesplot::mcmc_trace(model_1_province[[1]],
                      regex_pars = c(".*treatment.*")) +
  labs(title = "Province Models, 100k")
```

```{r province-traceplots-5k}
#| message: false
#| warning: false
#| echo: false
#| fig-cap: "Traceplots for treatment variables from province models, outcome question: 5k distance."

bayesplot::mcmc_trace(model_1_province[[2]],
                      regex_pars = c(".*treatment.*")) +
  labs(title = "Province Models, 5k")
```

```{r district-traceplots-100k}
#| message: false
#| warning: false
#| echo: false
#| fig-cap: "Traceplots for treatment variables from district models, outcome question: 100k distance."

bayesplot::mcmc_trace(model_2_district[[1]],
                      regex_pars = c(".*treatment.*")) +
  labs(title = "District Models, 100k")
```

```{r district-traceplots-5k}
#| message: false
#| warning: false
#| echo: false
#| fig-cap: "Traceplots for treatment variables from district models, outcome question: 5k distance."

bayesplot::mcmc_trace(model_2_district[[2]],
                      regex_pars = c(".*treatment.*")) +
  labs(title = "District Models, 5k")
```

```{r full-traceplots-100k}
#| message: false
#| warning: false
#| echo: false
#| fig-cap: "Traceplots for treatment variables from full response models, outcome question: 100k distance."

bayesplot::mcmc_trace(model_3_full_response[[1]],
                      regex_pars = c(".*treatment.*")) +
  labs(title = "Full Response Models, 100k")
```

```{r full-traceplots-5k}
#| message: false
#| warning: false
#| echo: false
#| fig-cap: "Traceplots for treatment variables from full response models, outcome question: 5k distance."

bayesplot::mcmc_trace(model_3_full_response[[2]],
                      regex_pars = c(".*treatment.*")) +
  labs(title = "Full Response Models, 5k")
```

```{r ve-traceplots-100k}
#| message: false
#| warning: false
#| echo: false
#| fig-cap: "Traceplots for treatment variables from varying effects models, outcome question: 100k distance."

bayesplot::mcmc_trace(model_4_varying_effects[[1]],
                      regex_pars = c(".*treatment.*")) +
  labs(title = "Varying effects Models, 100k")
```

```{r ve-traceplots-5k}
#| message: false
#| warning: false
#| echo: false
#| fig-cap: "Traceplots for treatment variables from varying effects models, outcome question: 5k distance."

bayesplot::mcmc_trace(model_4_varying_effects[[2]],
                      regex_pars = c(".*treatment.*")) +
  labs(title = "Varying Effects Models, 5k")
```

```{r ordered-traceplots-100k}
#| message: false
#| warning: false
#| echo: false
#| fig-cap: "Traceplots for treatment variables from ordered models, outcome question: 100k distance."

bayesplot::mcmc_trace(model_5_ordered_response[[1]],
                      regex_pars = c(".*treatment.*")) +
  labs(title = "Ordered Models, 100k")
```

```{r ordered-traceplots-5k}
#| message: false
#| warning: false
#| echo: false
#| fig-cap: "Traceplots for treatment variables from ordered models, outcome question: 5k distance."

bayesplot::mcmc_trace(model_5_ordered_response[[2]],
                      regex_pars = c(".*treatment.*")) +
  labs(title = "Ordered Models, 5k")
```

```{r contact-traceplots-100k}
#| message: false
#| warning: false
#| echo: false
#| fig-cap: "Traceplots for treatment variables from contact models, outcome question: 100k distance."

bayesplot::mcmc_trace(model_6_contact[[1]],
                      regex_pars = c(".*treatment.*")) +
  labs(title = "Contact Models, 100k")
```

```{r contact-traceplots-5k}
#| message: false
#| warning: false
#| echo: false
#| fig-cap: "Traceplots for treatment variables from contact models, outcome question: 5k distance."

bayesplot::mcmc_trace(model_6_contact[[2]],
                      regex_pars = c(".*treatment.*")) +
  labs(title = "Contact Models, 5k")
```

```{r contact-interaction-traceplots-100k}
#| message: false
#| warning: false
#| echo: false
#| fig-cap: "Traceplots for treatment variables from contact and treatment interaction models, outcome question: 100k distance."

bayesplot::mcmc_trace(model_7_contact_int[[1]],
                      regex_pars = c(".*treatment.*")) +
  labs(title = "Contact and Treatment Interaction Models, 100k")
```

```{r contact-interaction-traceplots-5k}
#| message: false
#| warning: false
#| echo: false
#| fig-cap: "Traceplots for treatment variables from contact and treatment interaction models, outcome question: 5k distance."

bayesplot::mcmc_trace(model_7_contact_int[[2]],
                      regex_pars = c(".*treatment.*")) +
  labs(title = "Contact and Treatment Interaction Models, 5k")
```

```{r contact-interaction-districts-traceplots-100k}
#| message: false
#| warning: false
#| echo: false
#| fig-cap: "Traceplots for treatment variables from contact models, outcome question: 100k distance."

bayesplot::mcmc_trace(model_8_contact_int_districts[[1]],
                      regex_pars = c(".*treatment.*")) +
  labs(title = "Contact and Treatment Interaction District Models, 100k")
```

```{r contact-interaction-districts-traceplots-5k}
#| message: false
#| warning: false
#| echo: false
#| fig-cap: "Traceplots for treatment variables from contact models, outcome question: 5k distance."

bayesplot::mcmc_trace(model_8_contact_int_districts[[2]],
                      regex_pars = c(".*treatment.*")) +
  labs(title = "Contact and Treatment Interaction District Models, 5k")
```



## Rhat Statistics

```{r bivar-rhat-100k}
#| message: false
#| warning: false
#| echo: false
#| fig-cap: "Rhat statistics for parameters from bivariate models."

temp <- map(.x = seq_along(model_0_bivariate),
    .f = ~brms::mcmc_plot(model_0_bivariate[[.x]],
                type = "rhat") +
  theme(text = element_text(family = "oswald")) +
  labs(title = glue::glue("{gsub('troops', '', model_1_province[[.x]]$formula$resp)}"))
)

patchwork::wrap_plots(temp[[1]],
                      temp[[2]])
```

```{r province-rhat}
#| message: false
#| warning: false
#| echo: false
#| fig-cap: "Rhat statistics for beta parameters from province models."

temp <- map(.x = seq_along(model_1_province),
    .f = ~brms::mcmc_plot(model_1_province[[.x]],
                type = "rhat") +
  theme(text = element_text(family = "oswald")) +
  labs(title = glue::glue("{gsub('troops', '', model_1_province[[.x]]$formula$resp)}"))
)

patchwork::wrap_plots(temp[[1]],
                      temp[[2]])
```

```{r district-rhat}
#| message: false
#| warning: false
#| echo: false
#| fig-cap: "Rhat statistics for district models."

temp <- map(.x = seq_along(model_2_district),
    .f = ~brms::mcmc_plot(model_2_district[[.x]],
                type = "rhat") +
  theme(text = element_text(family = "oswald")) +
  labs(title = glue::glue("{gsub('troops', '', model_2_district[[.x]]$formula$resp)}"))
)

patchwork::wrap_plots(temp[[1]],
                      temp[[2]])
```

```{r full-response-rhat}
#| message: false
#| warning: false
#| echo: false
#| fig-cap: "Rhat statistics for full response models."

temp <- map(.x = seq_along(model_3_full_response),
    .f = ~brms::mcmc_plot(model_3_full_response[[.x]],
                type = "rhat") +
  theme(text = element_text(family = "oswald")) +
  labs(title = glue::glue("{gsub('troops', '', model_3_full_response[[.x]]$formula$resp)}"))
)

patchwork::wrap_plots(temp[[1]],
                      temp[[2]])
```

```{r varying-effects-rhat}
#| message: false
#| warning: false
#| echo: false
#| fig-cap: "Rhat statistics for varying treatment effects models."

temp <- map(.x = seq_along(model_4_varying_effects),
    .f = ~brms::mcmc_plot(model_4_varying_effects[[.x]],
                type = "rhat") +
  theme(text = element_text(family = "oswald")) +
  labs(title = glue::glue("{gsub('troops', '', model_4_varying_effects[[.x]]$formula$resp)}"))
)

patchwork::wrap_plots(temp[[1]],
                      temp[[2]])
```

```{r ordered-rhat}
#| message: false
#| warning: false
#| echo: false
#| fig-cap: "Rhat statistics ordered models."

temp <- map(.x = seq_along(model_5_ordered_response),
    .f = ~brms::mcmc_plot(model_5_ordered_response[[.x]],
                type = "rhat") +
  theme(text = element_text(family = "oswald")) +
  labs(title = glue::glue("{gsub('troops', '', model_5_ordered_response[[.x]]$formula$resp)}"))
)

patchwork::wrap_plots(temp[[1]],
                      temp[[2]])
```

```{r contact-rhat}
#| message: false
#| warning: false
#| echo: false
#| fig-cap: "Rhat statistics contact models."

temp <- map(.x = seq_along(model_6_contact),
    .f = ~brms::mcmc_plot(model_6_contact[[.x]],
                type = "rhat") +
  theme(text = element_text(family = "oswald")) +
  labs(title = glue::glue("{gsub('troops', '', model_6_contact[[.x]]$formula$resp)}"))
)

patchwork::wrap_plots(temp[[1]],
                      temp[[2]])
```

```{r contact-interaction-rhat}
#| message: false
#| warning: false
#| echo: false
#| fig-cap: "Rhat statistics contact interaction models."

temp <- map(.x = seq_along(model_7_contact_int),
    .f = ~brms::mcmc_plot(model_7_contact_int[[.x]],
                type = "rhat") +
  theme(text = element_text(family = "oswald")) +
  labs(title = glue::glue("{gsub('troops', '', model_7_contact_int[[.x]]$formula$resp)}"))
)

patchwork::wrap_plots(temp[[1]],
                      temp[[2]])
```

```{r contact-interaction-district-rhat}
#| message: false
#| warning: false
#| echo: false
#| fig-cap: "Rhat statistics contact interaction district models."

temp <- map(.x = seq_along(model_8_contact_int_districts),
            .f = ~brms::mcmc_plot(model_8_contact_int_districts[[.x]],
                                  type = "rhat") +
              theme(text = element_text(family = "oswald")) +
              labs(title = glue::glue("{gsub('troops', '', model_8_contact_int_districts[[.x]]$formula$resp)}"))
            )

patchwork::wrap_plots(temp[[1]],
                      temp[[2]])
```

\newpage

# References

::: {#refs}
:::
